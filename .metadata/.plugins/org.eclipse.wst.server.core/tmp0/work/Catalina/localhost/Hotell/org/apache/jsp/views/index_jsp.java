/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-18 11:27:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import model.HotelRoom;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.HotelRoom");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"fr\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Hotel Search</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("    @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\r\n");
      out.write("        :root {\r\n");
      out.write("            --background-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n");
      out.write("            --card-background: rgba(255, 255, 255, 0.15);\r\n");
      out.write("            --text-primary: #ffffff;\r\n");
      out.write("            --text-secondary: rgba(255, 255, 255, 0.7);\r\n");
      out.write("            --input-background: rgba(255, 255, 255, 0.1);\r\n");
      out.write("            --border-color: rgba(255, 255, 255, 0.2);\r\n");
      out.write("            --button-gradient: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Inter', sans-serif;\r\n");
      out.write("            background: var(--background-gradient);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            background: var(--card-background);\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            backdrop-filter: blur(10px);\r\n");
      out.write("            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            border: 1px solid var(--border-color);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap; /* Allow items to wrap */\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group {\r\n");
      out.write("            flex: 1 1 calc(50% - 20px); /* Each form group takes up 50% of the width */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            font-size: 1.1em;\r\n");
      out.write("            margin-bottom: 5px;\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"text\"], input[type=\"number\"], select {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background: var(--input-background);\r\n");
      out.write("            border: 1px solid var(--border-color);\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            outline: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        select {\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    background: var(--input-background);\r\n");
      out.write("    border: 1px solid var(--border-color);\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    color: var(--text-primary); /* Assurez-vous que la couleur du texte est claire */\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("    outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("select option {\r\n");
      out.write("    color: #333; /* Couleur de texte des options */\r\n");
      out.write("    background-color: #fff; /* Fond blanc pour les options */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            background: var(--button-gradient);\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background: linear-gradient(to right, #2575fc 0%, #6a11cb 100%);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .results {\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .result-item {\r\n");
      out.write("            background: rgba(255, 255, 255, 0.15);\r\n");
      out.write("            color: #333;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .image-container {\r\n");
      out.write("            width: 150px;\r\n");
      out.write("            height: 150px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            margin-right: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .image-container img {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            object-fit: cover;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .hotel-details {\r\n");
      out.write("            flex-grow: 1;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .hotel-details h3 {\r\n");
      out.write("            margin: 0 0 10px;\r\n");
      out.write("            font-size: 1.6em;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .hotel-details p {\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("            color: #555;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        select {\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    width: 100%; /* S'adapte au conteneur */\r\n");
      out.write("    background: var(--input-background);\r\n");
      out.write("    border: 1px solid var(--border-color);\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    color: var(--text-primary); /* Texte clair pour contraste */\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    appearance: none; /* Supprime l'apparence native */\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: all 0.3s ease; /* Animation fluide */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("select:hover {\r\n");
      out.write("    border-color: #6a11cb; /* Bordure en survol */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("select:focus {\r\n");
      out.write("    border-color: #2575fc;\r\n");
      out.write("    box-shadow: 0 0 8px rgba(37, 117, 252, 0.5); /* Effet lumineux */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("select option {\r\n");
      out.write("    color: #333; /* Texte des options */\r\n");
      out.write("    background-color: #fff; /* Fond blanc pour les options */\r\n");
      out.write("}\r\n");
      out.write("        \r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Hotel Search</h1>\r\n");
      out.write("        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/SearchServlet\" method=\"post\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>City:</label>\r\n");
      out.write("                <select name=\"city\" required>\r\n");
      out.write("                    <option value=\"ARIANA\">ARIANA</option>\r\n");
      out.write("                    <option value=\"SOUSSE\">SOUSSE</option>\r\n");
      out.write("                    <option value=\"MONASTIR\">MONASTIR</option>\r\n");
      out.write("                    <option value=\"ZARZIS\">ZARZIS</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Number of Stars:</label>\r\n");
      out.write("                <select name=\"stars\" required>\r\n");
      out.write("                    <option value=\"1\">1 Star</option>\r\n");
      out.write("                    <option value=\"2\">2 Stars</option>\r\n");
      out.write("                    <option value=\"3\">3 Stars</option>\r\n");
      out.write("                    <option value=\"4\">4 Stars</option>\r\n");
      out.write("                    <option value=\"5\">5 Stars</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Room Type:</label>\r\n");
      out.write("                <select name=\"roomType\" required>\r\n");
      out.write("                    <option value=\"standard\">Chambre Standard</option>\r\n");
      out.write("                    <option value=\"deluxe\">Chambre Deluxe</option>\r\n");
      out.write("                    <option value=\"suite\">Suite</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Maximum Capacity:</label>\r\n");
      out.write("                <select name=\"capacity\" required>\r\n");
      out.write("                    <option value=\"1\">1 Person</option>\r\n");
      out.write("                    <option value=\"2\">2 People</option>\r\n");
      out.write("                    <option value=\"3\">3 People</option>\r\n");
      out.write("                    <option value=\"4\">4 People</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Min Price:</label>\r\n");
      out.write("                <input type=\"number\" name=\"minPrice\" min=\"0\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label>Max Price:</label>\r\n");
      out.write("                <input type=\"number\" name=\"maxPrice\" min=\"0\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\" style=\"flex-basis: 100%;\">\r\n");
      out.write("                <button type=\"submit\">Search</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"results\">\r\n");
      out.write("            <h2>Search Results:</h2>\r\n");
      out.write("            ");

            List<HotelRoom> hotelResults = (List<HotelRoom>) request.getAttribute("hotelResults");
            if (hotelResults != null && !hotelResults.isEmpty()) {
                for (HotelRoom hotel : hotelResults) {
            
      out.write("\r\n");
      out.write("            <div class=\"result-item\">\r\n");
      out.write("                <div class=\"image-container\">\r\n");
      out.write("                    <img src=\"uploads/");
      out.print( hotel.getImageUrl() );
      out.write("\" alt=\"Hotel Image\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"hotel-details\">\r\n");
      out.write("                    <h3>");
      out.print( hotel.getHotelName() );
      out.write("</h3>\r\n");
      out.write("                    <p>City: ");
      out.print( hotel.getCity() );
      out.write("</p>\r\n");
      out.write("                    <p>Stars: \r\n");
      out.write("                        ");
 for (int i = 0; i < hotel.getNumberOfStars(); i++) { 
      out.write("\r\n");
      out.write("                            <i class=\"fas fa-star\" style=\"color: gold;\"></i>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </p>\r\n");
      out.write("                    <p>Room Type: ");
      out.print( hotel.getRoomType() );
      out.write("</p>\r\n");
      out.write("                    <p>Price: ");
      out.print( hotel.getPrice() );
      out.write(" TND</p>\r\n");
      out.write("                    <p>Capacity: ");
      out.print( hotel.getCapacity() );
      out.write("</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");

                }
            } else {
            
      out.write("\r\n");
      out.write("            <p style=\"text-align: center;\">No results found</p>\r\n");
      out.write("            ");

            }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
