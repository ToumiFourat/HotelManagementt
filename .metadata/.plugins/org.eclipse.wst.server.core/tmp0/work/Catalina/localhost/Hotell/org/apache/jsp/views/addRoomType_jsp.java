/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-18 10:41:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import model.Hotel;
import dao.Hoteldao;

public final class addRoomType_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dao.Hoteldao");
    _jspx_imports_classes.add("model.Hotel");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"fr\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Ajouter un Type de Chambre</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --background-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n");
      out.write("            --card-background: rgba(255, 255, 255, 0.15);\r\n");
      out.write("            --text-primary: #ffffff;\r\n");
      out.write("            --text-secondary: rgba(255, 255, 255, 0.7);\r\n");
      out.write("            --input-background: rgba(255, 255, 255, 0.1);\r\n");
      out.write("            --border-color: rgba(255, 255, 255, 0.2);\r\n");
      out.write("            --button-gradient: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Inter', sans-serif;\r\n");
      out.write("            background: var(--background-gradient);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            max-width: 500px;\r\n");
      out.write("            background: var(--card-background);\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            backdrop-filter: blur(10px);\r\n");
      out.write("            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            border: 1px solid var(--border-color);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-title {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            gap: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-input, .form-select {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background: var(--input-background);\r\n");
      out.write("            border: 1px solid var(--border-color);\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            outline: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-input::placeholder, .form-select {\r\n");
      out.write("            color: var(--text-secondary);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-button {\r\n");
      out.write("            background: var(--button-gradient);\r\n");
      out.write("            color: var(--text-primary);\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: opacity 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-button:hover {\r\n");
      out.write("            opacity: 0.9;\r\n");
      out.write("        }\r\n");
      out.write("        .form-select option {\r\n");
      out.write("    color: #000; /* Texte noir pour les options */\r\n");
      out.write("    background-color: #fff; /* Fond blanc pour une meilleure visibilit√© */\r\n");
      out.write("}\r\n");
      out.write(".form-input option{\r\n");
      out.write("            color: #000;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"form-container\">\r\n");
      out.write("        <h1 class=\"form-title\">Ajouter un Type de Chambre</h1>\r\n");
      out.write("        <form class=\"form\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/AddRoomTypeServlet\" method=\"post\">\r\n");
      out.write("            <!-- S√©lection de l'h√¥tel -->\r\n");
      out.write("            <select class=\"form-select\" id=\"hotelId\" name=\"hotelId\" required>\r\n");
      out.write("                <option value=\"\" disabled selected>S√©lectionnez un H√¥tel</option>\r\n");
      out.write("                ");
 
                    // Instancier le DAO
                    dao.Hoteldao hotelDAO = new dao.Hoteldao();
                    List<model.Hotel> hotels = hotelDAO.getAllHotels(); // R√©cup√©ration des h√¥tels

                    if (hotels != null && !hotels.isEmpty()) {
                        for (model.Hotel hotel : hotels) {
                
      out.write("\r\n");
      out.write("                            <option value=\"");
      out.print( hotel.getId() );
      out.write('"');
      out.write('>');
      out.print( hotel.getName() );
      out.write("</option>\r\n");
      out.write("                ");

                        }
                    } else {
                
      out.write("\r\n");
      out.write("                    <option disabled>Aucun h√¥tel disponible</option>\r\n");
      out.write("                ");

                    }
                
      out.write("\r\n");
      out.write("            </select>\r\n");
      out.write("\r\n");
      out.write("            <!-- Libell√© du type de chambre -->\r\n");
      out.write("            </select>\r\n");
      out.write("\r\n");
      out.write("            <!-- Room Type -->\r\n");
      out.write("            <select \r\n");
      out.write("    class=\"form-input\" \r\n");
      out.write("    id=\"label\" \r\n");
      out.write("    name=\"label\" \r\n");
      out.write("    required\r\n");
      out.write(">\r\n");
      out.write("    <option value=\"\" disabled ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.label == null ? 'selected' : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">Type de chambre</option>\r\n");
      out.write("    <option value=\"standard\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.label == 'standard' ? 'selected' : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">Chambre Standard</option>\r\n");
      out.write("    <option value=\"deluxe\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.label == 'deluxe' ? 'selected' : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">Chambre Deluxe</option>\r\n");
      out.write("    <option value=\"suite\" ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.label == 'suite' ? 'selected' : ''}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(">Suite</option>\r\n");
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("            <!-- Capacit√© maximale -->\r\n");
      out.write("            <input \r\n");
      out.write("                type=\"number\" \r\n");
      out.write("                class=\"form-input\" \r\n");
      out.write("                id=\"capacity\" \r\n");
      out.write("                name=\"capacity\" \r\n");
      out.write("                min=\"1\" \r\n");
      out.write("                placeholder=\"Capacit√© maximale (Ex: 4)\" \r\n");
      out.write("                required\r\n");
      out.write("            >\r\n");
      out.write("\r\n");
      out.write("            <!-- Prix -->\r\n");
      out.write("            <input \r\n");
      out.write("                type=\"number\" \r\n");
      out.write("                class=\"form-input\" \r\n");
      out.write("                id=\"prix\" \r\n");
      out.write("                name=\"prix\" \r\n");
      out.write("                min=\"0\" \r\n");
      out.write("                placeholder=\"Prix (en ‚Ç¨)\" \r\n");
      out.write("                required\r\n");
      out.write("            >\r\n");
      out.write("\r\n");
      out.write("            <!-- Bouton de soumission -->\r\n");
      out.write("            <button type=\"submit\" class=\"form-button\">Ajouter</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
