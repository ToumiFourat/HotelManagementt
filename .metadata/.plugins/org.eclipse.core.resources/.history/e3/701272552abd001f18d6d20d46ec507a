<%@ page import="java.util.List" %>
<%@ page import="model.Hotel" %>
<%@ page import="model.Roomtype" %>
	<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Agent Dashboard</title>
    <style>
        :root {
            --background-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --card-background: rgba(255, 255, 255, 0.15);
            --text-primary: #ffffff;
            --text-secondary: rgba(255, 255, 255, 0.7);
            --input-background: rgba(255, 255, 255, 0.1);
            --border-color: rgba(255, 255, 255, 0.2);
            --table-header-gradient: linear-gradient(to right, #6a11cb 0%, #2575fc 100%);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--background-gradient);
            min-height: 100vh;
            color: var(--text-primary);
            line-height: 1.6;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 50px auto;
            padding: 30px;
            background: var(--card-background);
            border-radius: 20px;
            backdrop-filter: blur(15px);
            box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--border-color);
        }

        h1, h2 {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 30px;
            color: var(--text-primary);
            font-weight: 600;
            letter-spacing: -1px;
        }

        .actions {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 20px;
        }

        .actions button {
            background: var(--table-header-gradient);
            color: var(--text-primary);
            border: none;
            padding: 10px 20px;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .actions button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            overflow: hidden;
        }

        thead {
            background: var(--table-header-gradient);
        }

        th, td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
            color: var(--text-primary);
        }

        th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.9rem;
        }

        tbody tr:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        img.hotel-image {
            max-width: 80px;
            border-radius: 5px;
            cursor: pointer;
            transition: transform 0.2s;
        }

        img.hotel-image:hover {
            transform: scale(1.1);
        }

        .btn-edit, .btn-delete {
            padding: 8px 12px;
            margin: 2px;
            border: none;
            border-radius: 5px;
            color: white;
            font-weight: 600;
            cursor: pointer;
        }

        .btn-edit {
            background-color: #3498db;
        }

        .btn-edit:hover {
            background-color: #2980b9;
        }

        .btn-delete {
            background-color: #e74c3c;
        }

        .btn-delete:hover {
            background-color: #c0392b;
        }

        /* Modal styling */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            position: relative;
            max-width: 80%;
            max-height: 80%;
        }

        .modal-content img {
            width: 100%;
            height: auto;
            border-radius: 5px;
        }

        .modal-close {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #e74c3c;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 18px;
        }

        .modal-close:hover {
            background: #c0392b;
        }

        .actions {
            margin-bottom: 15px;
            text-align: right;
        }
        .hotel-image {
    max-width: 80px; /* Réduit la largeur de l'image */
    max-height: 60px; /* Ajuste la hauteur */
    border-radius: 5px; /* Ajoute des coins arrondis */
    cursor: pointer; /* Change le curseur sur hover */
    transition: transform 0.2s; /* Ajoute un effet d'agrandissement au survol */
}

.hotel-image:hover {
    transform: scale(1.1); /* Agrandit légèrement l'image au survol */
}
.logout-btn:hover {
            background-color: #c0392b;
        }
    </style>
    
    
</head>
<body>

    <div class="container">
        <h1>Agent Dashboard</h1>

         <!-- Section for managing hotels -->
        <div class="section">
            <h2>Gérer les hôtels</h2>
            <div class="actions">
            <button class="btn btn-add" onclick="window.location.href='views/addHotel.jsp'">Ajouter un hôtel</button>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nom</th>
                        <th>Ville</th>
                        <th>Étoiles</th>
                        <th>Description</th>
                        <th>Image</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <%
                        // Retrieve the list of hotels from the request attribute
                        List<Hotel> hotels = (List<Hotel>) request.getAttribute("hotels");
                        if (hotels != null && !hotels.isEmpty()) {
                            for (Hotel hotel : hotels) {
                    %>
                    <tr>
                        <td><%= hotel.getId() %></td>
                        <td><%= hotel.getName() %></td>
                        <td><%= hotel.getCity() %></td>
                        <td><%= hotel.getStars() %></td>
                        <td><%= hotel.getDescription() %></td>
                        <td>
    <img class="hotel-image" src="uploads/<%=hotel.getImage()%>" alt="Hotel" onclick="openModal('uploads/<%=hotel.getImage()%>')">
</td>
<td>
                            <button class="btn btn-edit" onclick="window.location.href='views/editHotel.jsp?id=<%= hotel.getId() %>'">Modifier</button>
                            <button class="btn btn-delete" onclick="deleteHotel(<%= hotel.getId() %>)">Supprimer</button>

                        </td>
                    </tr>
                    <%
                            }
                        } else {
                    %>
                    <tr>
                        <td colspan="7" style="text-align: center;">Aucun hôtel disponible.</td>
                    </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        
       <!-- Section for Room Types -->
<div class="section">
    <h2>Gérer les types de chambres</h2>
    <div class="actions">
        <button class="btn btn-add" onclick="window.location.href='views/addRoomType.jsp'">Ajouter une chambre</button>
    </div>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Label</th>
                <th>Capacity</th>
                <th>Price</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <%
                // Récupérer la liste des Room Types à partir de l'attribut de la requête
                List<Roomtype> rooms = (List<Roomtype>) request.getAttribute("rooms");
                if (rooms != null && !rooms.isEmpty()) {
                    for (Roomtype room : rooms) {
            %>
            <tr>
                <td><%= room.getId() %></td>
                <td><%= room.getLabel() %></td>
                <td><%= room.getCapacity() %></td>
                <td><%= room.getPrix() %> TND</td>
                <td>
                    <button class="btn btn-edit" onclick="window.location.href='views/editRoom.jsp?id=<%= room.getId() %>'">Edit</button>
                    <button class="btn btn-delete" onclick="deleteRoom(<%= room.getId() %>)">Delete </button>
                </td>
            </tr>
            <%
                    }
                } else {
            %>
            <tr>
                <td colspan="5" style="text-align: center;">No room types available.</td>
            </tr>
            <% } %>
        </tbody>
    </table>
</div>

        
    </div>

    <!-- Modal -->
    <div class="modal" id="imageModal">
        <div class="modal-content">
            <button class="modal-close" onclick="closeModal()">×</button>
            <img id="modalImage" src="" alt="Hotel Image">
        </div>
    </div>

    <script>
    function openModal(imageSrc) {
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        modalImage.src = imageSrc;
        modal.style.display = 'flex';
    }

    function closeModal() {
        const modal = document.getElementById('imageModal');
        modal.style.display = 'none';
    }

    function deleteHotel(hotelId) {
        // Confirmer avant de supprimer
        if (confirm('Are you sure you want to delete this hotel?')) {
            // Utilisation de fetch pour appeler la servlet avec l'ID
            fetch('DeleteHotelServlet?id=' + hotelId, {
                method: 'GET', // Utilisation de GET pour la suppression
            })
            .then(response => response.text()) // Récupérer la réponse en texte
            .then(data => {
                // Vous pouvez rediriger ou afficher un message ici
                alert('Hotel deleted successfully!');
                // Vous pouvez aussi recharger la page ou mettre à jour l'interface
                location.reload();  // Recharge la page après suppression
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to delete hotel');
            });
        }
    }

    function deleteRoom(roomId) {
        console.log('Room ID:', roomId); // Vérifiez que roomId est correct
        // Confirmer avant de supprimer
        if (confirm('Are you sure you want to delete this room?')) {
            // Utilisation de fetch pour appeler la servlet avec l'ID
            fetch('DeleteRoomTypeServlet?id=' + roomId, {
                method: 'GET', // Utilisation de GET pour la suppression
            })
            .then(response => response.text()) // Récupérer la réponse en texte
            .then(data => {
                // Vous pouvez rediriger ou afficher un message ici
                alert('Room deleted successfully!');
                // Vous pouvez aussi recharger la page ou mettre à jour l'interface
                location.reload();  // Recharge la page après suppression
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to delete room');
            });
        }
    }
    function logout() {
        // Envoi de la requête pour déconnecter l'utilisateur
        window.location.href = 'logout';  // Redirige vers le servlet de déconnexion
    }
</script>

</body>
</html>
